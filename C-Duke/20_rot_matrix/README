For this problem, you will be writing a function which 
performs a 90 degree clockwise rotation of a 10x10 matrix.
There is nothing special about a 10x10 matrix---we are just
fixing the size so that you can read the input in a future
assignment after you have learned about reading files,
but before you have learned about dynamic memory allocation.

In particular, you should write

  void rotate(char matrix[10][10])

in a file called rotate.c

This function takes a 10 by 10 matrix of characters and rotates
it 90 degrees clockwise, updating the matrix that was passed in
(remember that arrays are pointers, so you will modify
the array in the frame where it was created).

As you have not yet learned to read from files, we have
provided a compiled object file, read-matrix.o.  This
object file has a main function which will read
the input file (specified as a command line arugments
to your program), call your rotate function, and
then print the result.

If you compiled your code (and linked with read-matrix.o)
into a program called rotate-matrix, you might run it as

./rotate-matrix sample.txt

It will then print the resulting matrix, which in this case
should look like the contents of the file sample.out.
(Remember that you can use > to redirect the output
of a program to a file, and use diff to compare
the contents of two files).

Note that you do not have to complete the rotation 'in place'.

要编译您的 rotate.c 文件并与 read-matrix.o 链接，您可以按照以下步骤操作：

打开终端。
使用 cd 命令导航到包含 rotate.c 和 read-matrix.o 文件的目录。
运行编译命令：
gcc -o rotate-matrix rotate.c read-matrix.o
这将编译您的代码并与提供的对象文件链接，创建一个名为 rotate-matrix 的可执行文件。
一旦编译完成，您可以通过以下命令运行程序：
./rotate-matrix sample.txt
这将读取 sample.txt 文件，使用您的 rotate 函数对矩阵进行旋转，并打印结果。
如果您想将输出重定向到文件中，可以使用 > 操作符：
./rotate-matrix sample.txt > output.txt
这将把旋转后的矩阵保存到 output.txt 文件中。
如果您需要比较输出文件和预期结果，可以使用 diff 命令：
diff output.txt sample.out
如果没有差异，diff 命令不会输出任何内容，这意味着您的程序输出与预期结果相匹配。
请确保您的 rotate 函数正确实现了90度顺时针旋转矩阵的功能。如果您需要帮助实现 rotate 函数，请随时询问。祝您编程愉快！
